В ЭТОЙ ВЕРСИИ ДВИЖКА СКРИПТЫ НЕАКТИВНЫ ИЗ ЗА КРИВОСТИ ИХ РАБОТЫ.









Это раздел скриптов, почти весь VN будет строиться на данных скриптах. Итак, правила скриптования и комманды скрипта:

// В данной папке обязательно должен присутствовать файл start.txt, это запускающий файл, он тоже является скриптом, однако именно его движок будет запускать в первую очередь.
// Весь сценарий игры можно прописать и в одном файле, как например в том же start.txt, однако поддерживается разбиение на несколько скриптов.
// Такое сделано для меньшей путаницы, например, каждый эпизод или подэпизод в своём файле.

// Каждую команду следует писать с новой строки. Знак ";" ставить не обязательно.

* Переход между скриптами
Для перехода из одного скрипта в другой, необходимо в текущем скрипте прописать команду: System:NextScript["название_скрипта"];
Скрипт будет запущен паралельно текущему. Если необходимо выйти из текущего скрипта: System:Stop[];
Название скрипта - это название файла, он должен находиться в этой же папке. Название скрипта указывается без расширения, т.е. без .txt
Каждая команда в скрипте пишется с новой строки.

* Установка "Идеального экрана"
Перед работой желательно установить "идеальный экран". Все текстуры будут отрисовываться и подстраиваться под этот экран. 
Такая технология позволяет не задумываться о разрешении экрана на конкретном ПК.
Установка экрана:
IdealScreen:Size[W, H];
W и H - высота и ширина экрана в пикселях.
По умолчанию разрешение - 1200х800.
Разрешение можно вернуть в начальное состояние, прописав команду с параметром Reset[];
IdealScreen:Reset[];

* Работа с текстурами
// Размеры текстуры ОБЯЗАТЕЛЬНО должны быть кратны степени двойки, т.е. принимаются текстуры с разрешением 32x32; 128x128; 256x512; 16x1024 итд.

Пережде чем отрисовать, текстура должна быть загружена в память. Для этого необходимо кинуть текстуру в папку Textures (текстура должна быть в формате .png)
Далее необходимо указать движку, что эту текстуру следует загрузить. Для этого в файле sprites.txt с новой строки пропишите имя текстуры без расширения.
Отрисовка текстуры производится командой: Texture:Draw["имя_текстуры", X, Y, W, H];
Имя текстуры необходимо указать такое, какое вы указывали в файле sprites.txt, т.е. так же без расширения.
X - позиция верхнего левого угла текстуры по X
Y - то же только по Y
W - ширина текстуры, лучше указать реальные размеры текстуры, но мало ли))
H - высота.

Можно предварительно задать некоторые параметры, которые будут использованы при отрисовке текстуры.
Установка параметров для команды SetTexture

Texture:название_параметра[значения_параметра];

Т.е. что бы установить цветовой фильтр на изображение используется параметр ColorFilter[A, R, G, B]
A - прозрачность текстуры
R - красная составляющая фильтра
G - зелёная
B - синяя
Задаётся такой параметр так:
Texture:ColorFilter[255, 255, 255, 255];

Здесь в качестве фильтра стоит белый цвет - это равно тому, как если фильтра нет.

Следующий фильтр - Cut[X, Y, W, H];
Этот параметр вырезает из текстуры прямоугольник и отрисовывает его. Размеры прямоугольника не обязательно должны быть равны степени двойки.
Texture:Cut[0, 0, 50, 100];

Текстуры желательно именовать, это позволит выборочно взаимодействовать с текстурой.
Texture:Name["name"];
name - имя текстуры. По умолчанию всем текстурам присваивается имя "default".
Текстурам можно давать одинаковые имена.

Можно удалить все текстуры:
Texture:Clear[];

Либо удалить текстуру по имени которое вы задавали перед отрисовкой текстуры:
Texture:Del["name"];

В случае если необходимо сбросить все параметры на стандартные, выполняется команда:
Texture:Reset[];

* Установка заднего фона
Можно просто установить цвет заднего фона:
Background:Color[R, G, B];

Так же поддерживается сброс:
Background:Reset[];
По умолчанию цвет равен - RGB(50, 50, 50);

* Воспроизведение аудио.
Загрузка аудио файлов почти подобна загрузке текстур. Для начала, необходимо кинуть в папку Audios файл в любом формате. 
Далее в файле audios.txt с новой строки прописать имя этого файла с расширением.

Для воспроизведения аудио используется команда:
Audio:Play["name"];
name - имя файла, указывать то, которые было указано в файле audios.txt
Audio:Loop[true]; // или false. Отвечает за то, начать ли воспроизведение заново после окончания.
Audio:Stop["name"]; // останавливает воспроизведение аудио по имени.
Audio:StopAll[]; // останавливает воспроизведение всех аудио.
Audio:Volume[-1000]; // значение ослабления громкости. Интервал 0, -5000. Будет применено к аудио при следующем его запуске.

* Системные инструменты
System:Delay[5000]; // задержка выполнения скрипта в милисекундах.
System:WaitUserClick[left]; // (left/right/middle) остановка выполнения скрипта пока пользователь не нажмёт указаную клавишу мыши.

* Вывод текста
Text:Name["name"]; // задаёт имя тексту.
Text:Color[A, R, G, B]; // задаёт цвет тексту.
Text:Draw["текст", X, Y, "имя_шрифта"]; // отрисовывает указаный текст в указаном месте указаным шрифтом.
Text:Reset[]; // сбрасывает настройки шрифта
Text:Del["name"]; // удаляет отрисованый текст по имени.
Text:Clear[]; // удаляет все тексты.
--------------------Список доступных стандартных шрифтов----------
f1015
f1020
f2030
f1015i
f1020i
f2030i
------------------------------------------------------------------
В случае если вы ошибётесь именем шрифта и такого шрифта нет, то будет передан шрифт f1015.
Вы можете создать свой шрифт командой:
Text:CreateFont[W, H, true/false, "name"]; // W и H - ширина и высота букв текста (лучше соблюбать пропорцию 1х1.5), true/false - является ли текст наклоным, name - имя шрифта.
После чего шрифт будет создан и добавлен в список шрифтов. Вы сможете обращаться к нему по заданому имени.

* Дебаггинг скрипта
В движке предусмотрена консоль, в которую можно выводить сообщения из скрипта.
Для вывода сообщения используется команда:
Debug:Write["текст"];
Для отчистки консоли:
Debug:Clear[];

* Системные неуправляемые переменные
_GameTime - возвращает количество тиков (1 тик = 10ms) от времени старта движка
_LangPack - возвращает текущий язык в движке
_Location - текущая локация движка
_MPosX - координаты мыши по X
_MPosY - координаты по Y
_MLeft - вернёт 1 если ЛКМ нажата, в противном случае 0
_MRight - вернёт 1 если ПКМ нажата, в противном случае 0
_MMiddle - вернёт 1 если СКМ нажата, в противном случае 0
_TextureCount - вернёт количество отрисовываемых текстур
_TextCount - вернёт количество отрисовываемых текстов

* Использование управляемых переменных
Создать и присвоить или просто присвоить значение переменной:
V:["name", "value"] - устанавливаете имя переменной и присваиваете ей значение.
Для получения значения:
V["name"] - если переменной с таким именем не существует, то она будет воспринята как текст. Следите за этим.
V:E["name"] - вернёт 1 если переменная с таким именем существует, в противном случае 0.

Если переменная является цифровой, т.е. содержит только цифры, то над такими переменными можно производить математические действия.

Math[имя переменной, переменная/цифра, знак, переменная/цифра]
Выполнит математическое действие:
1 - в какую переменную записать результат.
2 - первая переменная.
3 - действие/знак.
4 - вторая переменная.
Поддерживаемые действия:
+
-
*
/
^ - степень
% - остаток от деления







* Общий список команд и их описание:

IdealScreen:Size[W, H]; - установка идеального экрана.
IdealScreen:Reset[]; - сброс идеального экрана.

Texture:Draw["name", X, Y, W, H]; - отрисовка текстуры.
Texture:ColorFilter[A, R, G, B]; - установка цветового фильтра.
Texture:Cut[X, Y, W, H]; - вырезка прямоугольника из текстуры.
Texture:Name["name"]; - установка имени текстуре.
Texture:Clear[]; - удаление всех текстур.
Texture:Del["name"]; - удаление текстуры по имени.
Texture:Reset[]; - сброс настроек на стандартные, ColorFilter/Cut/Name.

Background:Color[R, G, B]; - настройка цвета заливки.
Background:Reset[]; - сброс цвета заливки на стандартный.

Audio:Play["name"]; - начать воспроизведение аудио файла.
Audio:Loop[true/false]; - зациклить ли воспроизведение файла.
Audio:Stop["name"]; - остановить воспроизведение файла.
Audio:StopAll[]; - останавливает все файлы.
Audio:Volume[0/-5000]; - устанавливает громкость воспроизведения.

System:Delay[ms]; - останавливает выполнение скрипта на указанное количество миллисекунд.
System:WaitUserClick[left/right/middle]; - останавливает скрипт в ожидании пока пользователь не нажмёт ЛКМ/ПКМ/СКМ.
System:Stop[]; - осуществляет выход из текущего скрипта.
System:NextScript["name"]; - переход между файлами скрипта.

Text:Draw["text", X, Y, "font_name"]; - отрисовывает указаный текст ы указаном месте указаным шрифтом.
Text:Name["name"]; - задаёт имя текста.
Text:Color[A, R, G, B]; - задаёт цвет текста.
Text:Reset[]; - сбрасывает настройки текста
Text:Del["name"]; - удаляет текст по имени.
Text:Clear[]; - удаляет весь текст.
Text:CreateFont[W, H, true/false, "name"]; - создаёт новый шрифт с указаной шириной и высотой буквы, наклоности и именем.

Debug:Write["text"]; - выводит текст в консоль движка.

* Общий список зарезервированых переменных и их описание:

_GameTime - возвращает количество тиков (1 тик = 10ms) от времени старта движка
_LangPack - возвращает текущий язык в движке
_Location - текущая локация движка
_MPosX - координаты мыши по X
_MPosY - координаты по Y
_MLeft - вернёт 1 если ЛКМ нажата, в противном случае 0
_MRight - вернёт 1 если ПКМ нажата, в противном случае 0
_MMiddle - вернёт 1 если СКМ нажата, в противном случае 0
_TextureCount - вернёт количество отрисовываемых текстур
_TextCount - вернёт количество отрисовываемых текстов

* Управляемые переменные:

V:["name", "value"] - создаёт и присваивает или присваивает существующей переменной значение
V["name"] - возвращает значение переменной по имени
V:E["name"] - вернёт 1 если переменная существует, в противном случае 0

Math[имя переменной, переменная/цифра, знак, переменная/цифра] - куда записывать результат, первое значение, действие, второе значение.